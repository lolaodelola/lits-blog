---
title: final_test
blog: podcast
published: false
date:  2019-09-28 14:53:05 +0100
duration: 00:30:51
description:
audio_link: https://lits-podcast-episodes.s3.eu-west-2.amazonaws.com/audio/final_test.mp3
---
<audio controls src='https://lits-podcast-episodes.s3.eu-west-2.amazonaws.com/audio/final_test.mp3'>
      Your browser does not support the <code>audio</code> element.
    </audio>

the absolute goal on audacity. I have to be returned into the podcasting world. Almost 18 months after I decided to just up and leave without saying bye. I recognise my faults and I just need you to forgive me. Way. Welcome to lost in the source. I am your host, Lalla. And as you heard in the interim, I am sorry, man. I'm so, so sorry. I became Casper and I just ghosted. I didn't leave anything by way of explanation. I just left and but I'll explain right now. So last year I was doing the podcast and it was going well, and I also run a non profit called Black Girl Tech, which I was running at the time. And at the time I was. I had a full time job and was fully employed. I was really important and was employed a CZ, an engineer. That's a lot of things to be doing. The nonprofit in itself is like a full time jobs. It was pretty much like two full time jobs and this podcast and my actual just regular life. That got to be a lot for me. So I decided to re prioritise and ditch the poor cost on DH focused on the other things blackguard. Tech was kind of booming at the time. We were doing more events with larger numbers on it was just like, you know, getting a lot of traction. So I just decided to focus my attention on that as a side project has a side hustle kind of thing, and I knew I could always come back to this podcast. A few people definitely hit me up in that time to be that quiz the next episode. When are we going to hear something else? Shot, outdone home? And here it is. This is the next episode saying that things are gonna change if you heard the last Let's call it season. If you heard the last season, you will know that I was coming from a viable. Here's my experience in the industry in the source on Dhere. Hair of the things I've dealt with here. Of the things I've learned on DH here, the things I have to kind of share with you it's still gonna be a bit of that. It's also gonna be a be a bit of tech news. Sometimes if I see something interesting in the news. We'll see how it goes on. It will also be a bit of explaining technical concepts. So, for example, if you don't know what front end or back and engineer is, I will explain that if you don't know what you are or you exes, I will explain that on except you. Except you're right, so that's pretty much what we're going to do. So let's go to the ads, and then we'll get straight into this. This podcast is sponsored by a Black Guard Tech Black Girl Tech is a non profit that aims to help to diversify the tech industry. Emphasis on help, and the way they do that is by offering free monthly workshops for black women and non binary people as well. A scholarships on much, much more. There will be more coming out at the end of 2018 early 2019 so keep your eyes peeled. You can cheque up Black girl tech on the Web Black gold dot tech in your little address bar. Up there, you can cheque out black garter con tutor That's Black Girl Tech and our Facebook Black Girl Tech. All right, So I'm going to get into the main topic today, and I am going to be talking about the dreaded impostor syndrome, right? I think I was our scheduled to do this, preserved for Episode two. But after the last few months, I've had, particularly the last few weeks I've had. I just kind of felt like this is a timely discussions. I was going to get comfortable. I have my uncomfortable. So let's get into today's topic. Impostor syndrome. The dreaded in processes is like when you become an engineer. When you received that first paycheck, it's like you're also acknowledge Hee. You have to sign in terms and conditions. You have to cheque the chick. You have to take the chequebooks That says I agreed to the terms and conditions on the terms and conditions are you will have impostor singer for the rest of your life. That is just That's it. Bastards. What comes with the territory? You want to become an engineer? Okay, get comfortable feeling like an imposter. Get comfortable feeling like you're gonna be found out like you're not this mind president of world, which you're not, of course, but, you know, just get comfortable with that fat and that reality and something I've noticed just by reading things online. Looking at people's tweets and stuff is that this feeling is definitely it happens to everybody. But this feeling seems to be so much more impacted. A Mark's minority groups in the industry, whether that's LGBT people, whether that black people, whether that's women, whether that black women and everybody asked that, like has an intersection somewhere, whether that people with disabilities, If you are a minority in this industry year, it seems to be a much more impacted thing for me. Personally. I have dealt with it since I started learning how to code. I am one of those people. Yeah, who at school I didn't have to try to be good, you know, like I knew that I could do the bare minimum and get more than decent grades. I knew that if I did it, do the bare minimum. That's the only reason I would feel. So when I, you know, would get grades that were lower, I'd be like, Oh, yeah, on literally did not do anything. I wrote my name on the exam paper and that was it. You know Q. Like going to college. Things change like things got so real in college. I have flopped everything in college. But I also knew that I did not try and college. So although I flopped, it was kind of like, OK, well, I don't really try. So his friend and I got to uni started trying again and again, but by trying again, it wasn't even, like try and what, you know, doing the bare minimum again. And I was cool. So when I started to learn how to code, I started to learn how to cope by myself on DH. My introduction to it was through co academy, and it was fine when I was by myself. I was going great. You know, I would do the little tutorials. I learned a damn bit. Oh, wow. Okay, you're gonna be black now. Okay? Background. Blue War H one hate to, you know, you just get gas to get excited, and it's not. It's difficult, but it's not so difficult. That's incomprehensible. Well, it wasn't so difficult to me that it was incomprehensible. And then I came a fork academy and it was like our No, but why aren't you turning blue Now, why is that? Hey, Chuan not do what the hatred is supposed to do now and at that point are for okay, let me go and do a boot camp. Now a boot camp is a very, very intense course. It's usually over the space of 12 weeks and you're just learning house a code nonstop for those two weeks. And the idea is that after the 12 weeks, you are an engineer. So they're saying in three months who we can turn you from a non engineer to our highly qualified engineer. Yeah, Don't have to do computer science. You have to go to uni. Just give us three months. The 1st 4 weeks of that, Fremont's ill fated. That's fairly in everything. There was nothing I was passing and this was so unusual to me because, as I said, like when I try, I get grades, I see results. Do you know? I mean, and now I'm trying and I'm not seeing those grades. I'm not seeing those results, and I realised that it was true for everyone else around me, like everyone was pretty much like not doing well. And then, you know, you start to support each other and you start to help each other. And it's like, OK, now we're all succeeding. And I think that was my first introduction to Impostor syndrome because even though I was succeeding, there was still an element off. What if I get found up like I found it so hard in the beginning on? The only reason I'm succeeding is because other people are helping me. Maybe I'm not really understanding it. My thing is not as good as their thing, etcetera, etcetera. Um, and it didn't help that my experience at boot camp was very much tainted. You know, I was the only one, for example, who didn't get a job at the end of it. And according to my teacher at the time, was kind of like your portfolio's amazing your interview and very, very well, so we don't know why. So you know that that helped to make the impostor syndrome worse. You know, like I'm the only black woman under course, and I'm also the anyone who's not going on tow full time rolls. Even the supposedly my portfolio is fine. Amazing quote unquote. And even though I'm intervened really Well, so, you know, fast forward to my first job. On my first job, I was hired as a ruby engineer and I did not touch Ruby for the eight months I was there. I probably touched. We rely twice, and that did not help to make me feel any better. I was made to do front and work. Many hate him on CSS with a bit of Java script. Bit of J query, but I wanted to be a back and engineer. Or at least I wanted to get experience in those back end skills. So it just kind of made me feel like, Oh, wow, I'm not even good. They've hired me as a ruby engineer and maybe they realise that I'm not even good enoughto do Ruby work right? By the way, there was a protest on. I did most of the co test on the bit that I couldn't do. I did with my employees in his office. But while I was there, actually, like my first day was not on Ruby work. Even though they built stuff on Ruby fastball to my second job, they hired me for full stock role. The code test was in CSS, and that should have been a clue to me that OK, maybe they're not going to let me do back and work here. But I did it at the time. I just didn't think Andi was the same thing, you know, like they might. My actual boss was just like I'm too ambitious while he accused me of being too ambitious and that I needed to calm down because I was asking for like, Oh, can I shadow, Can I pair programme is someone who's doing Ruby on all of these things, right? All of these things that people tell you being too ambitious, you need to calm down. You need to enjoy being a junior. You need to do this. You need to do that. Doesn't help. Didn't help my imposter syndrome. It just made me continue to feel like I'm not supposed to be here. I'm no, no one even recognises that I can do the thing. Maybe because maybe it's because I can't actually do the thing may be the reason they're not recognising. Um, the reason I'm not given the opportunity Teo, like, do What I want to do is because I can't do it, and that's how I felt most of the time. And in my second job, it got really, really bad because I get panic attacks and all of this stuff, and there was a lot ofthe other stuff going on in that second job. But, you know, a lot of it was also this impostor syndrome feeling and just feel like I didn't belong and I shouldn't be here. That's the key is not just that you don't belong but that you don't belong and you shouldn't be here. It was in that job that I decided to get mental because I was kind of like, you know, I don't want to be here not getting the skills that I want to get for very long time. So I'm going to get a mental on DH. We're gonna like code outside of work, and I'm going to get this girls, I need to get Ruby so that I could move to a better job or no, a better job, but just a job that I would prefer to be in. And I did exactly that. The thing is, though, the joke is that they didn't They didn't make me a full time member of star. So after my probation, they're just like, yeah, it's not working out Actually what his exact words were There's no easy way to say this, but you're fired. When I asked why he gave me a mix of contradictory I don't know, feedback. It wasn't really feedback. More of kind of dislike. Oh, you're lazy. Oh, you wanted a mental and just like weird things was like I thought I was over ambitious, right? So that happened. And I really that drug was just a read negative experience, and I was kind of like, Fine, I'm giving up on the industry and that didn't happen into my third job on DH. My third job was where I really like Sean. I really excelled on the impulses, and Jim, I felt here was less. I don't belong more. Um, can I do the same? Right? And I think there is a difference. And I think that is in your eyes, like do I have the skills and capacity to do the thing? And the reason that that shift happened is because my colleagues my team didn't make me feel like I didn't belong like I didn't once Goto working for that. I don't think I should be here now. Could I have quote unquote been my authentic self? How, Ana? Absolutely not. And I don't think that's a bad thing. Like, I don't think I have to be my authentic self at work. But I didn't. I also didn't feel like the self I bought to work was not welcome or not wanted or not thought that, you know, not thought that I could do the work, right. It was just me kind of thinking. Can I do the work? Can I do the thing here? They are trusting me with the experts, and it proved that I could like, I got to raises in my 1st 6 months there. And so it was just a really good experience. And it helps toe all the experiences I had before that you know, where their impossible dreams that impacted it helped Teo believe some of that. Just by heaven, a super encouraging, super supportive, honest team around me really helped that. So in my fourth job now, I was at my last job for two years in my fourth door on contracting for an American company on DH. It's been a really, really rocky experience for me personally, Um, their hope is just how can I say this? It's just been a really rocky experience with me, to be honest with you. I came into the job not knowing any of the programming languages and everybody needs. I didn't lie or anything like it was no facts. That loner doesn't know the programming languages or the frameworks we use here. So it was kind of what at least I thought it was kind of understood that, you know, there'll be some learning curves. They'll be some time to just kind of like figure things out on DH. Also, another thing to know is that how one company uses a language in a framework can differ so drastically from the way another company uses the language in the framework right back. It could be two totally different ways. So there was just, you know, learning the actual language of a framework ad also learning how it's used at this company, and it's just been a really, really, really difficult time for me. Um, the last four months have just been really hard on DH. I am on annual leave this week. This is my first annual leave since I started. And for those of you who don't know annual leave is because Americans vacation on DH. It has just let me kind of reflect sit back and reflect This annual leave has been also really hard because I've been thinking about work a lot on DH. I have had some really, really low moments. If I'm totally honest moments of just kind of like you know what? Maybe I'm actually not a very good engineer. Like it feels like I have been a junior engineer for four years on. I know, theoretically that that's just not true, because in my last job, I definitely chance, like I moved up from junior to like her lower, mid level, kind of like a introductory midst and like, are basically move from junior to mid level in my last job. But it does feel like I've been a junior engineer for four years. I've been into thiss industry for four years and just you know, I had moments this week are just like, maybe I shouldn't be here, but maybe I'm actually at the level I'm at simply because I'm no good. I'm not talented. I'm not getting the code. This is despite the fact that I have built Web applications from scratch from the ground up. This is despite the fact that Avalon brand new frameworks in a new used them in, like, two weeks and under this is the Besides the fact that, you know, I have made valid contributions. Even early on in my career, I was making contributions to open a source code on, you know, talk close off all the contributions I made to the companies I've left behind me, right? Despite all of that, there are still moments where I kind of feel like maybe I'm just not good. Maybe I'm not good enough. Maybe the reason I'm having the really horrible experiences I'm having in this industry, maybe the reason I am you know, the last four months has been really difficult for me is simply because I'm no good on DH. That's just not a great place to be in. Especially when you're doing work that you enjoy doing. Like I love coding. I really, really enjoyed coding on when you're doing work that you enjoyed doing and you still feel like maybe you shouldn't be. Do I feel that? Maybe. Yeah, no shade. But I feel like maybe this is what sound card rappers Sure. Like when everyone else is telling them that I know they're raps on good, but they love it. But it's like, Should I quit? Probably you should. But at the same time, you know, I think that we really good a way to kind of get out of that mine. From get out of that mentality is look at the facts. What have you done? What have I done? What have I contributed to it? I was talking to a friend yesterday night and kind of going through this stuff, and he was just basically like now you are good, but he's a senior android engineer. And he was just like, Look how much stuff you taught me. Like I taught him about SSL certificates. And so now he doesn't have to worry about SSL certificates anymore. He has explained some light. Really? I didn't do computer science. I did English literature and creative writing. So for me, computer science is a foreign language. He has explained bit mask into me. He has explained like concepts in Java. To me, that was kind of Oh yeah, I get it. And so from him is like it's ridiculous that I even think what I think about the same time. It's for me. It's kind of like, OK, I just need to look at the facts. I have made really good contributions to this community, technically right, whether it's building the whole of the blackguard tech website and currently be boarding it or are these re figuring out some things and that includes, like architecture, planning and design that includes, like, actually no in front and back end code that includes working with multiple people on DH, just like loads of things increase right? And then the fact that I have built features on DH on DH stuff, I couldn't think of a word, but I build stuff for other people. They've paid me for it and they thought it was good, like the only job where things didn't work out in a very negative way was my second job. My first job I left because I wanted to didn't find me on my second job, my third job, which is my last job. I was there for two years. And as I said in my 1st 6 months there, I got to pay rises and then in my at my year, I've got a seven K pay rise, which is not common, you know, because I'm the reason I got that seven k pay rises because someone else had hunted me on DH. They were like, Now we want to keep you and not her Brag not to boast. But sometimes you must just collect your accolades, man like know what you can do? Other people recognise my work. Other people recognise what I can do. So even though the last four months have been rocky and bumpy or whatever, it's no about that. Okay, they were rocky. There were bumpy, but what can I do? What have I done? Even in the last four months, I have done stuff, and I think when you're going through that time off impulsive syndrome, it's really, really important to just go back to a source of truth. Fact, however, that you need to talk to somebody else is gonna like, boost your ego a little bit and remind you, or it's just, you know, you keep a journal or diary or list ofthe things that you've done a list of accolades, Just something you can go back to, you know, and be like, Okay, I'm actually about it like I'm about to buy it like I'm not just talk. I'm actually about it. So yeah, that's kind of like my kind of take on imports. This injury, my experiences with you, I kind of display the main takeaway. Just remember to go back to the truth. Remember to go back to the source. It's getting difficult to take a break. So let's get into the next section of this podcast, which is in the source, where explains something technical. If there's anything you want me to explain, treat me at lost in the source and I'll give it my best shot. I don't know anything. Google is definitely my biggest help, so I will definitely try my bestest to explain. Today, though, we're going to be looking at debugging and how to debug. I have been mentoring a friend of mine for un enough for a bow. I want to say a year or just over a year, and and something I realised on even something I realised of myself as well is that debugging can actually be quite difficult if you don't know what tools you have at your disposal. Starting this new job where the language is different, the frameworks are different. The debugging tools and methods are also different some of the same, but mostly are different. And just even getting your head around, how to even fix or even understand a problem when a problem happens in your code can be a little bit tricky. So here are some tips in tricks that I lean on and that I think really, really, really help me personally. So the first thing I employees to do, and this is going to sound really, really simple on I'm not trying to be patronising but read the error message. It's simple, but it's something that I have skipped a lot, and the person who I was mentoring, he skipped a lot as well on. The reason for that is because as soon as you see error, error error, you panic. And so your first thing to know even you just see Aaron, you panicky, Just go back into the code and try and figure out what it's happening. What's gone wrong and, you know, off course, everything looks like it's going perfectly fine. Everything looks good, but it's not good, right? Reading the error message will tell you if you are programming in in a communicative language like Ruby. Um, and even sometimes JavaScript but not ready. It will tell you what's going wrong. It will tell you there's an undefined variable. It will tell you if you've got a syntax error, it will tell you if you are, you know, expecting one data type on DH instead, you've got another data type. It will let you know. It will tell you that your thing that you're using doesn't exist. It will let you know our messages are not very to scare. They are there to help. They are there to guide their their toe, let you know they're just messages that let you know something's gone wrong on what's gone wrong, which, ofcourse, helps you better debug and figure out what's going wrong in the application. Usually good air messages as well. We'll tell you the line that's causing the error so you can even narrow it down even more to the specific line that's causing your error message So read your error message and also look for the line that's causing the error Now. Sometimes it may not be clear what land it's causing the error, or even if the line is specified that Linus fine. And it's, you know, maybe a few lines above that's done something dodgy right now. A good thing that I use here are debugging tools, each language and each framework has their own debugging tools. I cannot attest to all of them. I can only attest to the ones and the things that I've used in Ruby. A really, really good debugging toe is price. Andi, you can. There are two gems. I think one is pride by a bug. On one is just pride. I think I remember the difference between two. There are a few nuances between them, but essentially they do the same thing, right. They allow you to put, um, some code where you think you're going wrong. And when you run your server and you hit that method again, it will stop. The whole thing will stop the server right there in the code so you can kind of, like, inspects the code. You can cheque what the data is right there and then something similar to that in JavaScript is de bugger. So you can put a what's called a D bugger on the line you suspect is going wrong and refresh your page and job in the on the browser. This's for JavaScript, and it will stop right there and again. You can go into the console and cheque. What's your data arrears on what's going wrong in it just allows you to inspect the code in a nicer way. Another way is a simple console dot log. This's for JavaScript again. Andi, this is if you, for example, if you have a variable and you're not too sure what's in that variable in your air Messages telling you what you think is in that variable is not in that terrible. You can console, log that variable and when you go into your when you right click in your browser and you hit, inspect and you see a little tab called console, and when you go into console, you will see whatever's in that variable. It would have printed it out to the consulate, have logged it to the console, so debugging tools are really useful ways to inspect the code. Um, while the operation is running. Yeah. So for Ruby, it was prior Prior by bug for JavaScript. Is debug a tool on the console log for the debug. It'll you can actually do that in in the I lost my train of thought. You can do that by right clicking. Inspect on DH. Then in sources, you can actually see the list ofthe files that get generated When you run the site and you can find the line and debug. I may actually put like a little gift off that happening on. Put it on Twitter. Just so you have, like, a visual because that might be a little bit difficult to understand. The final thing, I think, is like, super really important. And every time I talk about debugging every time I talk about being an engineer, this is the one thing that I always make sure to mention Google. You will have not been the first person to hit this error message. You will not have been the first person to hit this bug. Take the error message and just drop in Google. Now there may be some things that are unique to use, such as in the name of the application that their message will have and stuff like that. So try and be as generic as possible. Take out unique things to yourself. But usually what will happen is you get a bunch of search results, or at least a few search results that you know have that error message in them and also other people discussing the error message. So places like Stack overflow sometimes even Google forms like different male innocents stuff. We'll discuss the thing. Sometimes they'll be whole block posts on this error message, and you can just find other people solutions, and you can test it out on yours on also, tweak the solutions to fit what you need and also just read the code, read other people's code to find out what on earth they're doing, why they're doing it and why it's applicable in their context and if it's applicable in your context. So just to recap the things you should do when you need to debug, you need to read the error messages you need to find out what line is causing the error, and this can usually be done by simply reading the error message. You can use debugging tools such as price D bugger on console dot log and you can Google and those are my four tips off the bag in. There are obviously tonnes, tonnes, tonnes more if you have any useful tips on how to debug, do share with me on Twitter at Lost in the Source, and I think it's time to wrap up. This episode is brought to you by blackguard. TECH Blackguard Tech is a nonprofit organisation that aims to help diversify the tech industry by encouraging black women and non by angry people to explore and learn technology. In the past, they've done that food free monthly workshops and scholarships. And in the future, there's gonna be so much more so. Cheque out, Black girl Take on Twitter at Black Gold Tech Cheque up like God take on Facebook Blackguard! Tech and cheque out Blackguard! Tech on the web black girl dot Tech So that is it for Episode one season to I'm gonna be back in your is in about two weeks. So I'm gonna try and do a bi monthly thing. No, that's not bimonthly Biweekly. It and all. I'm talking about. I'm going to change you like a biweekly thing. Every two weeks we'll see how long that lasts. But this time, I promise I won't just abandon you. Thanks for listening. Follow at Lost in the source on Twitter and I will see you in two weeks.
