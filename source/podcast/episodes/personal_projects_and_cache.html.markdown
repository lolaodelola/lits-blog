---
title: personal_projects_and_cache
blog: podcast
published: true
date: 2019-06-03 03:00:07
duration: 00:42:02
description:
audio_link: https://lits-podcast-episodes.s3.eu-west-2.amazonaws.com/audio/personal_projects_and_cache.wav
---
<div class='row'><audio controls src='https://lits-podcast-episodes.s3.eu-west-2.amazonaws.com/audio/personal_projects_and_cache.wav' class='col-md-12'>
      Your browser does not support the <code>audio</code> element.
    </audio></div>

Transcript unavailable

[//]: # (hello and welcome to lost in the source. I am your host Lalla been gone for about a week. About back. Now let's get into the O. So, yeah, I was in California last week, not last week, the week before last week. And I was there for like, I flew in out my flat was on Sunday. So you flew in on Sunday and I came my flight left on Thursday and I got back here on Friday. The thing is, the California's eight hours behind on, So my body was just madness the whole of last week. So recording a podcast meeting just wasn't gonna happen. And even if it did happen, it I wouldn't have known when to release it pretty much because that's where my mind was that But we're back this week on DH. Today, I'm going to be talking to you about personal projects. I think in the past, I've spoken a little bit about, like, the really silly requirement that people need to have personal projects outside of work to show that they are good engineers, good developers. But this week I'm going to be talking about Okay, so you do want to build something. What? What do you do, Andi? Also be talking about my personal projects, Things I'm building at the moment things are doing on how I'm able to do those things. And then in the source, we're gonna be talking about the cash. What is the cash? What does it do? What about s O? Yeah, let's get into it. So yeah, personal projects. So some of you may know if you listen to the podcast before the job I'm doing at the moment doesn't require me to code every single day. It doesn't require me to code at all. I go. I can do this job without cutting, ever. What my main job is to do is to help other people debunk their situations. So I'm reading a lot ofthe graphs. I'm getting a lot. I'm reading a lot of logs. I understand how people use the platform. I'm I'm digging in the console, which is it's coding. But no, I'm not building anything. Basically. So, like, I'm going into the console and, like, you know, digging things out and stuff like this. We didn't database graphs and stuff like this, but I'm not building anything for my professional day job. Now that may change soon. There's one of my colleagues who wants the work of man on a project also, which will involve more coding, so that may change soon. But for now, that's not what I'm doing. Which means, though, for the first time in a really long time, I'm no under any pressure to produce any code. I'm not under any external scrutiny stress whatever to produce any code and honest to God, it just feels so, so good. It feels really, really good to be able to build without having to worry about who's K P. I's not gonna get mad if this thing doesn't get Bill and who's stressing me out and pressure to, like, learn all these things in the cellar mark in a certain time frame so that I could be productive and just all this negative stuff that has come of products and Jin ear for me on this, that for me passing that realisation, I said this week. That is really unlikely that I'd go back to products engineering because there's been one place upwards where products engineering has been kind of stressful, but they're still been, you know, the kind of regular stress off deadlines need to be met. And like, you know, I think that that place it was a bit more healthy. But Madrid of the time, it's not healthy and it's no, you know, really productive. Or, you know, it makes you feel exhausted. Which means by the time you get home, you don't even wanna look at you don't want to look at, you know, anything you'd want to build for yourself some inner space. Now, where I am able to look a code. When I finished for the day, I was gonna say, When I get home, I work from home. So I am able to look at code or my personal machine. When I finished for the day, I am able to like, be intrigued, interested, curious about various different things. Which means that I'm able to I'm in a better space to build. I'm in a better space. Teo, create on DH. I'm a creative person. Like if anybody that knows me knows that I love creating. If you don't know. I used to be a poet before, while I still am a poet, but I have a written in real time. But that was that. I mean, thing before that, it was drama on. You know, I have worked too flat, the young, quick and blah, blah blah. So, Emma, creative person. So it's just really nice to be in a space where I feel like I can help create and so on that I'm actually building three different things right now, which may be a bit overkill is definitely the most I've been coding at one time, which is strange because in product engineering jobs, I've had definitely working on multiple code basis at one time, and I've never seen it is weird. It's just kind of like a normal I'm never just working on one code face, but in my own personal life. Now I am working on multiple quote bases at one time, so I'm going to talk a little bit about those projects. Um, something more detailed than others could sell my car when I can't really talk about. So yeah, I'll soak up a little bit about each project on Basically talk about, I guess, like how I generate ideas and, you know, stuff like this. So basically I went through a long time of I want to build something, but I don't know what to build. Like I want something this So before I get into it, when I think about building projects, Monetisation isn't the first thing I think about on. That's because I personally want to be very intentional about things I'm wanna ties. I do not want to fall into the habit of just because I've built something and just because I think this thing is useful to other people that I'm going to sell it. Um, For me, Monetisation has always come at the cost of myself on DH. There was no real price off me. So you know, it's for me. It's not really worth it. And the reason it's not worth it for me right now. That is because I'm gonna drop that. That can afford my my life with that can pay for my life. If you're not in a job that can pay for your life, definitely think about Monetising. The projects that have I come from a background where I want to say we're hospitals. But you know, you think any skill that you have, you think how can I make money from this? But you know how to do hair. You think? Okay, how can I make money from doing here? Stop my own salon or at least like to do my friend's hair so that they can pay me if you, um in the playground by, like a pack of Luca's aid or pickles Sweets from Iceland and then sell it on Uptick in the playground so you can make money like I come from a background, a social background where we need to make money because we didn't necessarily have a lot of money. So you're always thinking about OK, how can I make my own income right? And every single skill that you have every single talent that you have always thinking about? How can I monetise this girl? And I'm monetise this planet on shifting into a kind of new against social economic class? Is that my mind frame? My mindset around that is kind of like changing because doing all those things adds stress. You know, like it's not easy to figure to like monetised things on DH keep things at a certain standard while also working a full time job. But lots of people who do that it's stressful for them. You know, there's a lot of work on DH. I guess it's just me basically saying to myself, I don't need to put in that same amount off work out as I was before because I'm in this space right now. So you know, so all of that to say, like, Monetisation isn't gonna say the first thing that comes to mind with projects that that I want to build. So yeah, so I went through a face off. I want to build something, but I don't know what to build on DH this wass specifically for Monetisation, the thing I wanted to build. I wanted to build it specifically to make extra income, but I wanted it is the key thing for me was it would need to make, like, a little bit off a passive income. So something that I can build and build it really well on DH, you know, I wouldn't have to necessarily be touching it all the time. There was a strict requirements that even if I did wanna add a new feature, I'd have to really think about the impact of this new feature on the user. Like, you know, I'm not trying to build a whole monolithic empire with this thing. It needs to do one small thing, and it needs to do. That's more thing really well, on any sir. Make extra money on the side, and and someone who actually like I always think about when it when I'm thinking about this particular kind of project is this guy could be Hein and he works would get up at the moment as an engineer, and he has a company called C Car and Seekers. Literally, it does one thing, and it does one thing well, and it's basically allows youto have a job board. If you've ever seen the Black Guards have job board, we used Zika Job Board on DH. If it is possible that I will have a job or for lost in, the source will have the block on DH. I'll probably just use a secret job board for that, too. And essentially, it's just a way for, you know, people tto make money off of nomads on DH. It does that one thing and it doesn't really really well. He definitely does have features. He definitely works on it when he wants to But it's not like this whole thing off, like it's not linked in. It's not, you know, a job site. It's just a job boards you can add to your website. You can link to your website on people composed jobs, and you can make money from the jobs that they post. So it's really straightforward on DH. I want to build something like that is it does that one specific thing. So I have been thinking about that on that's taken me a while. But what I like to do is keep track of my ideas, whatever ideas they are there, maybe code and ideas. They may be non code and ideas that maybe, you know, ideas for whatever. So I have a trailer board and it's literally just called ideas. Onda has three columns. It has come on board. The first column is, but it's basically where all the ideas of docked and then it has doing done. And then I think you might have blocked or something like that. And when I'm working on a specific idea, I'll put it in doing and etcetera etcetera s. Oh, that's kind of like how I manage my ideas because I I'm good at coming up with ideas, right? But I'm poor execute er And also, I will forget that I had this idea, so keeping track of it in shallows really meeting you. So for me, I'm just gonna just my mike. But I have a feeling it's not. So if you heard all of that clique crap could crap my bad, but yeah. So, um, I keep I keep track of my ideas and cello. You could use anything else on dso what other projects I'm working on right now. What is a client project on this client project is something I've been working on the last couple of months, and it really shouldn't have taken this long. And I'm just gonna go on a little tangent here and moan about how all this bloody projects has taken It is no fall off the climb at all. Actually, this client has been like a star client. They paid me like they're on time. They've already paid the full amount. Also, this kind of a previous colleague of mine who, you know, we had a good relationship working together. So anyway, that what they wanted was really simple. He said she was there when it was a bunch of HTML pages. A member log in on DH pages that were protected by the member logged. So you could only see those Haitian my pages once you logged in. And they also wanted to be able to upload stuff, files, documents, pictures whenever they wanted to be able to upload stuff. No, that is. Or fine and dandy. That's pretty simple, actually. When I say some part of me is simple for anyone to build, I mean, just like it's simple for me, too. But I did. I wouldn't I don't find that specifications hard. The issue is, I decided I was gonna use jumps back to build this. If you don't know what jumps back is, you need to go back and listen. Tio. Think two or three episodes ago, where talk about jam stack but essentially is Jarvis Goods AP S s, That's what J job skirts a p I m. Mark up and then stack, which is like your text back basically. So Jasdaq on DH, the mark up in this case would be HTML, the FBI that I was using on the job scripts that would have been using was something was intact of something called Clouded Mary. That was the day I was using. The reason it's taken me so long is because the Cloud and BJ query the situation is just not popping in any way whatsoever. It is lacking in multiple ways some of the issues I ran into caused by me, definitely, and some of the issues around into I'm not even sure card in Eri understands why those issues occur. And I was talking about two of the other day and someone actually message me not message, but treated me to say, Oh yeah, I've had lots of issues of card in areas. Well, so it's not even just me. Like there's just something that some light and it seems like they're service side stuff works fine. So the point of jumps like, is that you don't need to run a server too. Teo, create your wonderful sights, right? You just do all of this more clients. I'd stuff than the AP insects of some kind of external service somewhere else. So you know you don't need to run your own servant. It seems like if you run your own server and use their service side stuff. So, like whether it's their ruby stuff, their path or whatever it seems that life looking online, it seems things are all right if you use that stuff. But it's just them non service stuff there, Jake. Very stuff that's just kind of slacking. So after about two months of struggling with ordinary Tio one or two months, this was supposed to be finished by the end of April, and it's not the end of May. So yeah, I'm definitely a month over board. But in that time I did start a new job, blah, blah, blah, blah, blah. But in that time I just got to a point. I got back from Cali and I was just tired and exhausted, and I was looking at its pledge as like Bundy is, I'm not even going to use this anymore. And then she's just gonna build this thing and rails and I built in rails and it took me literally a day to build on rails, and by that I mean like a working. It's over eight hours and they're the reason even took me that long because I took breaks. I ran into some issues with one off the gems. If you don't know what Jimmy's A gem is like a plug in that allows you to add extra functionality. So the plug in hours use him for the member lookin side of things. I run into a few issues with that, but things that I was able to fix pretty. But I fixed that slid out and learning things about that particular Jim because it's a gem. I used often, and I just didn't know what's let it works the way it did. I'm certain circumstances, but you know something, you're right. And so I fixed that bill in a Dallas. Really annoyed because I was trying to be The whole point of meat and jumps back was because I was trying to be a good developer. The whole thing is that with each projects that comes your way, you're supposed to, like use tools that you know, unnecessary. For that project. Building this thing in rails just seemed a bit too. Rails gives your love stuff, Andi. It's really good for no, it's good for bigger projects. You know, a simple thing that literally just has a bunch of static, hates hear Mao on maybe one or two dynamic pages or pages that need to be dynamic. I proceeded. Think that needs a whole rails project the whole rolls up. However, I know rails understand rails, Rails rarely fails me in building the things that I need to build on DH. So it was just a lot quicker, a lot easier for me to just bang this out in a day Born Obama's done. I need to sort out some domain specific stuff from DNA stuff at the moment, but that's got nothing to do with the technology that I use. That's just got to do with, you know, Dennis. So that's one project I'm working on, and that's a client project. So I don't really have much say in the requirements. For that, I can advise on what technology to use. I can advise on how to do things in terms of what they need, what they want. The client specifies that right on DSO if you are stuck, you want to build something, but you're stuck. You don't know what to build. Finding a client who wants something manageable, you know, some people want things that are really wild and out there, then we need to build whole entire life basically social media sites for them. If you can manage that, sure, go for it. But I wouldn't recommend that, especially if you're if you're working as an engineer, full time job or in a tech role as a full time job. I wouldn't recommend going down that route on also if you're going to go down the client. But you want to make sure that your contract the non competes in your contract don't interfere with the client that you probably you possibly will be working with. But it's a good way for you off if you're still trying for ground. Sorry, that was my friend. I thought it was in silent. My bad. It's a good way, Tio. If you're stuck on ideas, it's definitely a good way to build something anything. And it's also a good way to like test technologies. So, like I was able to test this jam stack stuff and figure out like, Okay, what really goes into how this will look like and you kind of determined like, Okay, I need more time with it, and I just don't have the scope for times like Dove is much into it as I will need Teo, I'm gonna build this thing and rails. Um, so yeah, client stuff is a good way to have. I wouldn't. I mean, it's kind of a personal project, but really a side project. Let's say right. Another good way to figure out what he should build is like looking at like, Is there in need that Is there something you need for yourself that you want Teo fulfil? Is there something currently that you need that you wantto fulfil on? The reason I think this is good is because this broadens out scope so much because it's your personal need that you can dictate when you want to build it by you going to take the deadlines or whatever. And you can be a lot more casual, like there's less urgency, because is the need for you Actually, I don't want to say need because Needham cries. Urgency need implies, like we need to build this thing now I want is there were once that you have for yourself that you want to fulfil. This opens up the floodgates because you don't need to be constrained by the technology that you already know you can be like. Okay. I want to build a smart home system like a small, smart home system. Maybe something that dislike switches on the lights from my phone or, you know, switches on the heat in from my phone or whatever the case may be. You may not know a thing about Android or Iris. APS may not know a thing about Coyote, which is Internet of things. You may not know a thing about smart home technology, but this is the opportunity to learn, because this is something you want. This is something that will make your life a little bit more comfortable on Diz. No, like it's not impossible to build. People build these things all the time. Like at work in a slack channel were called Home automation. And you should see the kind of things people are building either by building that own Alexa APs or Alexa commands and stuff like this, or building that litchi their own. I ot hardware. You know there's a guy or two so called Shane Councilman. He wants Microsoft and he has built a bunch of stuff. He has diabetes, and he's brought about a bunch of stuff to track his diabetes collect, read his blood levels and things like this. A friend off he He's like a seasoned engineer, but his work isn't in that Io team realm ofthe things right. His work is like on the more software side of things. So figure out, Why is there something you want? Is there something what, that either Maybe too expensive Because it's usually cheaper to build things too expensive or if it's not too expensive. He just, you know, feel like you wanna build it. That's a really good place to start collecting all those ideas. I definitely want to build my own tea. Um, I ot situation at home. But the reason I haven't started is because I may be moving within a few years, so we'll see. But I would also say, like, Look, it's tutorials out there. Look, a resource is online. There's a lot, lot, lot out there, And so yeah, don't because Jane, by the technology that you know, I mean, if the thing if there if there is a once that you have that could be built by the technology that you know, then go for it. Build it with the technology that you know. But I just think having desires having once on DH knowing that nothing is impossible to build definitely opens up Things are not more so. Something I'm currently building at the moment that fulfils that actually does two things on board in that moment that fulfils too. Once that I have one is a like top secret, classified on a need to know basis projects The code name is more psychotic and talk about it. But this is definitely building something that, you know, I have, ah, once on a fulfil it and the alternatives are stupidly expensive on I dont really absolutely forgot wide they're so expensive because I know like I'm looking at the technology to build it, and I'm just kind of like a quite get it like it seems it seems simple enough, but maybe I just haven't hit the herd or I just Maybe I just haven't hit the thing that costs like a lot of money. Anyway, some build a morse on DH as I build and develop it. You see? You see what's about It's probably not gonna be called Morse. What's I like release it to the world. But that is something that we're feeling on. What something that I can't talk about that is also fulfilling on one is the loss of the source block. So I'm counting build in the lost insults block. I recently rebuilt my website, my personal website. No, no Dylan, don't Dev on DH. That's a very simple Hey, Timo CSS. That does nothing. It's bunch of Haiti. Marcy SS has got my logo on it and it's got two buttons on me and he's got two legs on it and that's it on like a paragraph about who I am, obviously. And that's it. I love it. It's probably the best personal Zay bill ever. It's got linked to my CV, all of that. It is not the most complex there, but I like it is pretty, um, and so I decided I wanted to build out lost in the source. I count your medium ever in one blood post this year medium, and actually have one that's finished writing, but it's in draughts or medium, and I haven't finished editing it, so that's why I haven't released it. But it's about a raise. Is a long block post about a raise, a raising ruby versus a raise in Java. But anyway, I I want to own my own contents on DSO. I want to move all my stuff. That's a medium into my own block. The reason I used medium originally is because I don't have to maintain your allergy. Just have to write the writing. Experience is nice. Elections have to write. People can see it reaches more people. I can see how many people like it. I can see comments and things like that, and I just don't have to mention any of the code. So it's really, really, really easy to use. However, you know that convenience comes at a cost. You and I don't have to actually pay anything to use medium. It has come at a cost off. You know what happens there? Medium decides it's gonna go off business weapons. To my content, that has happened of other businesses in the past where they gonna off business or something has happened, and they've lost all their user data or you know, something with an unwanted ful. What's the opposite of wonderful, delightful hurricane? Something weird and horrible. So I want to own my own content. So I originally thought, Yeah, I'm just gonna use a static site generator for this. Something like middleman. Something that gets me if you don't know What's that? It's that generator is I'll probably ask you to compete like Google because I know what it is. But I know the language I'm used to explain. It is just not gonna be useful. I would explain that as that exact generator basically allows you to do dynamic things that you would be able to do on a server and then, like, compounds all that dynamic dynamics ism and then spits out some static stuff on DH. Then you know you can serve up the static stuff basically. But we could be Joe Google. Definitely be better capable of explain. What's that excited generator is on? That is really, really low maintenance in terms of like maintaining code. That's we low maintenance and it's really straightforward. It's never straightforward. I have had struggles. Who says that? A Jekyll I'm looking at you. I've had struggle serves that's inside generators and I found others easier. But yeah, eso I was going to do that and then I realised that, actually, I also want Teo own host. My own podcasts like this is also my content on DH. When you start to add that kind of complexity, in my opinion, it's better to just have something that's dynamic off the bat. So you are hosting your own databases because, yeah, you're hosting your own databases and, you know, stuff at this. And so I have decided instead of easiness, that's Excite Generator. I'm gonna eat rail's gonna build this in rails when I started building it, and the blood portion of things is pretty much done. But the good thing again about this is that I'm interacting. I don't I've never been in a job where I have to build a block on. Building a block is usually like the really the first saying that a lot of frameworks teach you how to do because it's pretty straightforward, and it's complex enough. So you have various models. You have your user, you have your post, and I think that's it. I think there's a really Danny two models that you need. You need a user, you need a post right or on author and opposed on article on DH, then maybe you might have some comments as well. A comment modellers who are right and so there's enough complexity, complexity where you have to think about how does what relationship does a user have with a post or relationship? Does the Post have with a comment on comments with a post on post with her user and then comment with you? So you have to think about these relationships so there's enough complexes complexity, But it's not so much where it's like, overwhelming and like, just incomprehensible and all of this kind of stuff, right? It's kind of like manageable for beginner toe. Understand some dude in my own blawg at the moment on DH, that was the one that I had, like, you know, that met a want on DH. It's fun because I am using rails six to build This block on Real six is still pretty fresh out the boat, so their parts of real six that I have never used before, like action text action Texas put in you on action text is a busy week editor. That's Bill offers. Tricks are busy Week Editor stands for. What you see is what you get, and it's basically like, you know, when you're going to wear pressing, you wanna tap a block and then you have the bold italics. You know you can choose the fronts and stuff like that at the top is that that's always he would get better on. Girls has one now. It's pretty basic. I will say it definitely is quite basic, but it's It's the storm. Fine for very basic small things. It's still fine for, like, a blogged for myself that I'm the only author off, you know, on because I wanted at, you know, hosting my own podcast on stuff that introduces a whole new set of things that I've never interacted with many. Now, how do I display order in the client in the browser? How'd I display? How do I allow people to have that kind of like seamless user experience where they can actually just press play? I know hates them are has an audio element that you can use. But then there's also, like Java scripts, libraries. I think media element is one. I think media element is the one I'm probably gonna go along with. But there are other libraries that allow you to do these things, and I've never, ever touch them before. So it's a learning experience for me. I'm like, learning about these things, and it's, like, quite cool. The other projects Morse is, um, I'm learning about Google Cloud with that I've never had to use Google crowd or anything like that. I was gonna build in aid of U. S. On a dubious Robert had more expensive eight of us and have a good crowd. Um, but eight of us is on a long thing, man, like the AP eyes that I want to use on eight of us. It seems like not many people used them. Or maybe only enterprise users used them or something. It's just the docks are not friendly, and I'm running into errors that seems like other people have run into on. Nobody has been able to say this is the reason why I run into this era and I just don't have time to struggle with this thing. And also, Google crowd gives me more in terms of like what I need. So that's why I'm gonna go down Good cut. But I'm learning something new, so yeah, basically use a few projects I'm working on. And, well, you know, as I said, you can if you are stuck for ideas. You could definitely like to take on a client who already has the idea. Or you can look at what you want to fulfil for yourself. I have other ideas that I'm not working on right now. And there are literally more about like, is there a social need or want that I can build something for? So looking at the communities around you, looking at the world around you, Is there something that there's a particular community who really needs this thing or not necessarily needs? But, you know, it will make their lives easier with this thing. And can you build it? A good example is on Twitter. Oh, I forget her name. I think I want to say her name is Tracy. Hang on. Let me just google. Let me just go this woman real quick, okay? I couldn't find her forgotten the name but another good example is this guy King Courtney. If you are a critic, he gave he spoke about his product is called abolition and it basically gives you away. Teo, contribute money to people's bail, like, you know, people who have gone to gaol to build them out on DH. That's because, like thiss guys, African Americans, so that African American community, if you know anything about police on DH law and justice, quote unquote in America and even here. But in America, you know that black people are disproportionately targeted and the bells are set on the bill. You know, black people, and also black people are lower income who can't afford the bells. So this app allows you to contribute money towards somebody's bail. Basically, and it's like your left. You can donate actively donuts. I'm going to give $20 or whatever. Or you can have your like, spare change when you spend money. You know, the spare change goes Teo the app, and so that's looking at a societal need and saying, This is a community that needs something and here's me. I can build it. So, yeah, I think those are like three really good ways of finding projects to build. If you want to build something on, it's really important to keep track of your ideas. What ideas do you have? And also like proof of concept's so like Morse at the moment is really just a proof of concept. I don't know if I'm gonna actually, like, build a full thing, right? Building a proof of concept, you see, Is this feasible? Will this work and that will allow you to kind of like I had any doubts, were alive to see any potential problems, any potential issues that may come along on things like this, But yeah, I think I have rambled about that today. Let's get floor. Right. So in the source today, I'm gonna be talking to you about cash. What? His cash. Who is cash? Why is cash? How is cash and kind of whites? Why we use it? Why? It's important. So cash is a type of memories in orderto understand memory, you need to understand. So in order to understand, cash needs understand memory, right? And so memory, on a very basic foundational level, takes it input. It saves on DH, then it produces an output it achieves. So memory saves and retrieves money takes an important producers of that. Put so an example would be, you know, you have a word document your typing away. It's taken the emperor off the letters you are typing and its retrieving those letters in the words on Gwen. Yet she saved the document properly, you know, saves into moment than when you went up, you know, bring out that document again. Wanna open that document again? And trees that document from memory. So what is cash specifically and how this is related cashes a type off, easily accessible memory store right on. But she says recently, access to data that is more likely going to be access to get it basically makes an assumption that because you've accessed this particular object data, whatever recently, you're probably going to want to access it again. So it keeps it in the cash instead of the main memory. So the kind of journey off retrieval is when you are your computer to retrieve something, it will look in the cash first. Is this thing in the cash? If it isn't the cash, it would just serve it up to you and they'll be pretty quick and then if it's not in the cash or going to the main memory and look for it in the main memory and then serve at sea, which takes longer, right? So the cash takes a short amount of time. The mermaid takes made. Going into the main memory takes a longer amount of time. However, the cash it's more expensive for the computer to go into the cash on buy expensive, I think on the last podcast explain what we mean by technical, technically expensive, so it's more technically expensive. To go into the cash, then is to go into the main mummy. So because it's more technically expensive to go into the cash, there is a limited while memories also limited. But there's a smaller amount off memory located to the cache. Very, very small amount of money. So how does the cash No went toe, you know, put something new into it when to rotate things. So what happens is this you request something, It goes, the computer looks into the cash. Is this thing in the cash? No, it's not in the cash. It goes into main memory. It picks that thing out and serves it to you. But it also picks that thing out and says, I'm gonna put this thing because you just requested it. I'm gonna put this new thing in the cash. I'm also gonna look at What's the lot? What's the oldest thing in here? That you have no access or rather, what's the thing you access to the least? That's Carney in this cash, and it takes the thing you access the least out off the cash and puts it. I was always in main memory, but it, like, just takes it out of the cash, right? And so now this new thing you've access takes the place off the least access thing in the cash. I hope that makes sense. It's kind of like a revolving door off off data, essentially off objects. So, yeah, you're essentially making sure that the things that are in the castle things you access frequently and often so it doesn't have to go into main memory and take a really long time. But as I said, there's a small amount of memory allocated to cast. There's a small amount of space. OK, it's it's a cash. So you're not going. Teo is not gonna hold everything that's gonna have some moments where changes and chops things out, depending on what you request for it. So this is really useful because it means that s O, for example, really good examples, Like on a Web page. Web pages the mark up while the CSS on DH images and stuff like that there somewhere pages that they barely changed. Almost where Paige is the stuff the CSS on their many changes. You're not going to be changing your CSS when shouldn't be changing your CSS every day. Usually, what is once there is a design. There's a design, unless you want, like a whole new rebrand, the whole refresh. Right? So a lot of the time assets things that CSS things like images, things that job scripts are stored in the cash for your bra za. So it doesn't need to keep going into the main memory to find these assets, which means pages load faster, pages load quicker. Um, the downsides of this is also that when you do make a change, if you developed on sites locally before even haste, Inmarsat's before you may notice that sometimes you make a change maker CSS change. You make changed an image or something, and it doesn't immediately you refresh and it's still the old stuff, and that's because it's still going into the cash. So you want to force it to go into the main memory by emptying out the cash, then, you know, forcing it to generate everything from a memory again. Oh, easy generate. You're the new ticket against us. So that is cash. I hope that explains thing. There's a good zeen that I will find. I have read a description, but it's about $80 or four PdF. It's really good seeing it goes. It's about memory and cash in all of these things and a lot more detail than I've given you hear? So, yeah, if you want to learn more about that, I will leave that bolo. Thank you for listening. Remember to follow us on. Lost in the source on Twitter on DH share. Subscribe Comment. All the wonderful, amazing things lever of you on iTunes as well. If you use a podcast lever review Yeah, I will see you next week.)
