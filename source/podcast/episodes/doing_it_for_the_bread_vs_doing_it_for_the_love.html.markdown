---
title: doing_it_for_the_bread_vs_doing_it_for_the_love
blog: podcast
published: false
date: 2019-04-29 00:17:03
duration: 00:31:44
description:
audio_link: https://lits-podcast-episodes.s3.eu-west-2.amazonaws.com/audio/doing_it_for_the_bread_vs_doing_it_for_the_love.wav
---
<div class='row'><audio controls src='https://lits-podcast-episodes.s3.eu-west-2.amazonaws.com/audio/doing_it_for_the_bread_vs_doing_it_for_the_love.wav' class='col-md-12'>
      Your browser does not support the <code>audio</code> element.
    </audio></div>

Transcript unavailable

[//]: # (So this is what it feels like when you're in a job that cares and invests in your well being. Wow, I am back on today. Well, first off, I am Malala and this is lost in the source podcast where I speak about my journey from tech ahs. A black woman on DH also explained something technical in the source, which is towards the end of the episode in today's episode, I am gonna be having more of a chat about what's been going on these last few weeks after a tech fest. Money job, Onda also talking a bit about doing things or doing this job Engineering softer engine noon for money versus for passion. Is it important that you love doing what you do? It is important that you have to have, like side projects and things like this. And then in the source, I am going to be looking at garbage collection. Andi, give a bit more detail about that later on. So yeah, let's get into it. Okay, so these last few weeks have been quite eventful, actually, and I think actually burnt myself out a little bit, so I had to take like a a personal break from everything. But yeah, it's been interesting. Has been invented for So I guess, the first thing. Not the first thing, but one of the things that happens after Tech Fist. I went on Sunday because I was burned out Friday and Saturday and it was so, so good. I'm so proud of that team. Deb Salalah. Pretty much everyone. I'm not going to sit here and least everyone's names because the team is actually quite big, but pretty much everyone on that team smashed it, smashed it right out of the park. There isn't gonna be enough for a tech fest next year, but that is going to be one in 2020 on. DIT was just really nice to meet people, to chat to people. I got to meet people who listen to the podcast, which was kind of surreal, cause I know people listen, but it's weird meeting people in real life. Listen and also are not. Your friends like these are strangers who listened to my podcast. So yeah, it was really nice meeting you folks. It was just a lovely vibe. Man was a lovely day. The workshops and talks. It was just It was banging. It was so banging. And I can't wait to 2020 when they come back. Because you know what? Putting on a festival is difficult and intense and just sucks a lot of energy from you so well done to every tech fest. Another thing that happened which, if you heard my last episode, you know that I started a new job with the company. Could her Roku on DH? Matt, as you would have heard in the in, Joe is so surreal, being somewhere. So like, this isn't the first job that I've been in where they care about their employees. I've been in one of the job where they care about their employees on DH. You know, it was a great place to work and everything, but because the experience I had with the next job after that was so bad, it's so surreal to be in an environment that values you. You know, that isn't afraid to be like you're you're doing well and is it lying about it isn't afraid to be like How you feeling? I went out, you know, you know, understands or really is honest in how they expect you to progress helps you learn things, helps you like get to grips of things. The system. So the basically my new role is as a technical support engineer. And so I transitioned from a software engineer technical support engineer, and it's slightly different that there is a much coding, but there's a lot more stay. There are a lot more concepts and stuff that you have to understand and get your head around things. Some of the stuff is like specific to the platform. So some of the stuff I need to get my head around is specific to Baroque. Ooh, whoops. I'm playing are fiddling with a business card. Some of the stuff is specific to heroic. Ooh, and some of the stuff is more about programming in general, right? And how applications work in general, how databases work in general. Relational databases cause the application. This platform. Many hosts post grass. So you know how relational databases work in general. So it's a lot of stuff to learn, and something that is fantastic is I don't feel like I'm learning it by myself. I don't feel like I'm bothering anyone when I'm asking questions or anything like that on? I've come in. I pretty I'd only say, like a super high level is like a mid level role, Right? So I've come in at a mid level technical support engineer on everyone on the team. Wasn't it Has been an engineer. So you need tohave like Bill Web applications at some point in your career to do this role. And I'm working with people who know a whole heck of a lot about our whole equal up, so it can be a little bit intimidating, but everyone's just so lovely, so approachable, so nice. So yeah, like my is just really nice to be somewhere that values you. My manager's lovely and we chat often enough. Um, and we like pear programme together. And it's not a problem I think is just so nice to be in this environment where I feel like I'm actually learning. By the same time, I don't feel like overwhelmed. The job is challenging but not stressful, which is a really, really nice, sweet spot, because I just feel like there's just so much content out there. And so, yeah, I've made some personal goals for I want to do. I'm still talking about career progression of my manager and he actually bought it. He's been the one that's been like initiating conversations I initially brought up when I started just cause I wanted to understand the lay of the land a little bit more. But he, you know, his been so like active in terms of like get me to think about what I want to do, where I want to go, where I see myself moving to, like, whether that's staying within the support side of things, whether that's moving back into, like, more like traditional engineering side of things. Whether that's like managerial role, like if there's a managerial position that I want to go for, you know. So yeah, like it's just really good to be in a place in a space that is, like, proactive with my development in all facets on DH. I just want to also say that this is something I interviewed them about during the interview in stages. So like I spoke to them very frankly, about this stuff. So you know when you're interviewing, as I said before, not previous episodes definitely remember that you are being interviewed and you are also interviewing them. So find out a ll the stuff you want to know before you, like, make up your mind if you wanna work there. And I had a few other offers from other places before I made up my mind. So yet s Oh, yeah, that's my new job and that. So the topic I'll be talking about in the source garbage collection. That's actually something that I knew about but didn't know enough about before. And it's often that actually learned about a little bit yesterday. And I'm going to go deep into, um, like memory allocation and stuff like that as one of my personal goals. But yes, So that's something I know about on this job, and I'm really excited to share. So yeah, I think that's it for the updates. Ah, yeah, I think that's pretty much it for the updates. Okay, so the main main topic today is money. Thus is passion, sir. Like I just feel that there's thiss definite. There's this other thing, right that in tech, you get not get further. But employers want to see that you're passionate about the drug that you're passionate about coding, and that usually translates into, you know, loads of side projects being very active in certain communities of the last stack overflow. Whether that's Twitter, whether that's like your local community or whatever and doing it for the money it seemed to be frowned upon and like doing it for you know, because if we're gonna be roar software engineer in is over. Well paid job in most countries, in most places in the world, on DH If you're in America, Cor blimey! Like some of the salaries I've seen in America for being like the same level software engineer and I am here Mad is just It's sickening, but is a well paid job. And so you know people are gonna want to do for the money, especially Sena's money is vital. Teo survival and just living in general, right? And I just kind of so I enjoy coding, right. I enjoyed hurting. I enjoy a lot of things, though, and I think something that can easily capture they encapsulate. What I enjoy is just being creative in whatever facet that is. So, for example, the Fly Kim's clothing I wrote poetry on my undergrad degree is in English literature and perjury because I love creating Ray and I love understanding. So creating an understanding another example is one of my hobbies is to make my own creams and lotions and also do dio by around the house. So, for example, what's the last thing I did? Oh, I don't think that. See that And just oh, I'm making a shower word for my bathroom because I want a wooden shower. Yes, I know with voice. Job doesn't makes Don't worry, I've looked into it. I can do it. I've made a wooden showered from my bathroom. I had to like, saw the Dow's down and everything like that. I enjoy that stuff because it allows me to see, be creative and expressed myself and kind of just like, build something right. So being passionate about coding is easy to me, is easy for me to be passionate about it because it's just another way that can create another I can build. And it's also another thing I can go to understand, right? So it is for me. Yeah, sure, it's It is a passion, but for a lot of people it's not, and I think that's okay. Like if you are not passionate about Cody. That's fine. Like if you're just doing this for the money, I think that's perfectly OK. Coding is a well paid job. However, if you are just in it for the money, it will probably harder to do now. I can't speak from experience because it's not something I'm familiar with. But I know so many don't want to say that. I know that there are successful programmers. Hey, I don't give a shit about programming, really. They just like it pays all. They can feed their families, and that's fine by them. That's enough. Better need to be satisfied or they are satisfied enough. But they don't need, like, that kind of extra yl, you know, passion. And I'm gonna work X y zed late nights. And I'm gonna do this in my spare time kind of passion, right? And everyone has that. I think that's perfectly, perfectly fine. But I do think passion gives you like an extra thing. It gives you like an extra edge in that you have a desire to want to know you have a desire, Teo do right, even outside of whether you're paid or not, there's just this desire to want to do. And I think, regardless of whatever it is, whether it's coding whether it's like being a doctor, whether that's being a mechanic, however, it's teaching if it's something that you're interested in, regardless of whether you're paid for or not, that interest is gonna help a lot when you start getting paid for it, and it's probably gonna like help propel you in terms of your career. But even if you're not passionate about it, that doesn't mean that you can't cry crime. You can't climb the career ladder, right? However, I say that, but employers care. Employers care about whether or not you're passionate, especially if you're new. Be like if this is gonna be like your first job on, especially if you're a minority. You know there's that, like adage off like, you know, if you're black, you have the work twice as hard to get to the same distances. You know, if you're white and then you know ads being a woman add being disabled, also differently, abled at being, you know, trans or algae B Ad VI, And you know all these other things that will press you in this life actually those things that oppress you. Other people impress you for being part of those things in this life. Hey, you have to prove yourself right. So I guess like the thing is is gonna be harder if you're new, to show that you're passionate because you don't have or it's gonna be hard if you need to kind of prove yourself in general because you don't have the employee employment history to back up your claims, right? If you if you I don't have the employment history and you just have, like maybe a project on get hub, it's gonna be really hard to prove that you can do the thing. And it's gonna be really hard to put you in a position to be considered because you're going to be going up against people who have project like side projects or who are active in communities or who are doing stuff. That's just what's gonna happen. The benefit is that you're an industry where there's more demand than there is resource to fill that amount. But, you know, I was a coward of bank on that alone, basically on DH. Similar goes from being a minority. People are racist people are sexists, People are homophobic. Transphobic people are everything. Basically, people are oppressive, so it's just gonna be harder to prove yourself. And if my career is anything to go by, even when you've got the job, you still have to get in there. And, you know, be fine with them to show that to remind them that actually they hired U S O. They must see something. There must be a reason why they hide you. You're still gonna have to do that fight. But if you're not passionate and you want to show or you want to give not the illusion But you know you wanna put yourself in good standing. I think having a few side projects doesn't help. Does it hurts, You know, on a side projects doesn't necessarily mean you have tto build a whole working application. I mean, like, if you have an app that does work, you know, that's really good. But just showing that you're active in the community is also another really good way. I don't actually have that many side projects in terms of like coded upside projects. In fact, I don't the only side project I have his black Arctic, and I'll talk about that a little bit. But apart from black Coltec, I don't have any. Sy predicts that I would feel comfortable being like, Oh, hey, I built that because none of it works anymore. It's really old or I don't know, like on my CV. So, like very early in my career, I contribute to open source, which is a really good wayto, you know, get out there on deal with production production code if you're not, you know, working even if you are working. But it's just really good wayto give out to the community and also learn. So I contributed Teo Open Source that contributes an app called Diaspora, which is like a decentralised version of Facebook. And I also contributed to a gem court access stackable, which basically allows you Teo Um, it's a gem of Ruby gem. If you don't know what Jimmy's have, I lost and I don't think I've done the Lawson source on James. But basically a gem is just like a little package or a little plug in for Ruby. Basically, a Z axis stackable basically allows you Teo. We have objects in your application that you can add attacks, too. So, like, you know, breaking the tags eso yet and I'm not sure how much that helps. I don't know if it did if it did it, because it hasn't really come up. Those things haven't really come up in interviews. What has come up in interview Zola's black Caltech? And so we're black dot tech here. I've done code in. I built the websites most of the websites for Black Belt Ocado. I think the first or the 2nd 1 is the only one that I didn't build. But most of the websites for black Attack I've built and sure, yeah, they've what? So they've done what you know it needed to do when it needed to do it the last not this current iteration, but the last iteration before this one, where you could like booking events and stuff like that. That was definitely the most intricate because that deal with payments payment gateways that dealt with people being a lot of our GDP, even if they weren't logged in and stuff like this. So that was definitely the most complicated. It's oration off Black gods, if not the most complicated thing I've worked on definitely no, but the most complicated its duration ofthe black Caltech. But even then, it wasn't like the most complicated capital is very simple. Actually, Had a few models, didn't do like loads. And those and those stuff didn't need to. So even mission that wooden. I mean, I think it's still good to show, sure, but my point is that the thing people really drawn to wasn't the website Black got tech. It was the organisation black gonna take on what we're doing. What I was doing in terms of giving back to the community and really tryingto help underrepresented women, specifically black and non brand new people and in the community. And I think things like that really make an impact. And I think more of an impact than maybe obvious volunteering at these kind of events, starting your own events. Although there are so many events out there, Please, if you're going to start your own event, I'm never going to discourage anyone to start their own kind of like organisation or like their own community being definitely do that if you feel there's a need. But before you do that research, what's already out there and see if there's any other organisation or community projects that you can contribute your time too, because a lot of the time people need help. If everyone started their own events in their own organisations, there's nobody to kind of like volunteer and actually help with the work, because doing it is not easy. It's not hard, especially when you start to scale in the early days is great. When you start to scale and you have to think about logistics and staff, it becomes a little bit more complicated. So if you're gonna do, you're gonna go down the community route before you know, start your own thing and, like book a venue, booking the venues the easiest bit before you book a venue, figure out like who's already out there and how can I help them? But honestly, being a part of these organisations, whether it's your own or somebody else is really, really does help. So when it comes to side projects, I'll say, like be diverse, whether that's you, you know, volunteer at an event that's you. Start your only van, whether that's you, you are active on Stack overflow or Twitter, you know, specifically helping people. Something I started doing this year was having office hours because I was shutting down back Cal Tech and because yeah, many because I shut down black girl Tech and you know, people still had technical questions. I decided tto have office hours where you know, song, come back a 30 minute slot with me and we can go through self a problem. They're having their code. Whether that's yet, we could go for a problem. They're having their code, whether that's, you know, like a technical problem in terms ofthe always a bug or whether that's like a conceptual problem where it's like, Okay, this thing works, But I don't really understand why it works or understand what's going on, you know, so you can have office hours if you're comfortable with that. If you're new and you're not really, like confident with that, that's totally fine. If your newest well like don't be put off about volunteering in places if you're still like learning, teaching is a really good way to solidify that knowledge. If you can explain something to somebody else, that's a really good way to know that you know it. Number one and also to just, like, imprint that stuff in your brain. Um, so, yeah, you don't have to be passionate about working where you work, however, or do what you do. However, you should at least be a little bit interested. But you know what? The world doesn't work like that. Sometimes you land in a job that is not interesting to you whatsoever, and that's fine. But if you are gonna be doing this just for the money, then at least know that employers care about passion and know that they do look for hints that this person cares about what they're doing. So side projects help a lot. But, you know, sad project doesn't lessen. I just mean like building a Web app. You can do that if you want to, but it also means generally, just give them back to the community in some way on displaying your knowledge. In some ways, they're volunteering. As I said, it's a really good way because you're teaching Well, you're helping people understand Gordon is a boot in a Web app. Or, you know, something Onside is another really good records. You actually showing demonstrating that knowledge, you know, So yeah, I think that's about money and passion today. Yeah, it's going the source. Okay, so in the source today, I'm gonna be talking to you about garbage collection. What? The hair is garbage collection. So computer is used memory. Whole computers use memory. Memory is tonight. There is no an infinite amount. Memory memories, always for night. And so in languages like C, you have to actually, while your programming directly allocate the memory. So when you're you know, whether it's liketo he poor stack. But when you assign variables and things like this, you have that she's saying that Okay, give me this amount off memory for this specific thing, and then at the end, when you know you expect the programme to be run or you're no longer using that being anymore, you have to manually say, Okay, you can have this. I don't know, 64 be back because I don't need any more. So in languages, like so you have that she, like, think about the memory you're using as your programming. Then job comes along, Ruby comes along and other languages come along and they say, actually, no, you don't have to do that we're going to do for you on goingto collect this unused memory for you. So whether you're doing it manually or whether you're doing it automatically, I think I think they're both called Garbage Connexion. I may be wrong, oppose you to double cheque that essentially that act of like, clearing out the memory, um, or not clearing out. But it's given that memory back is called Garbage Collection on and the reason why you need to Really, I guess the reason why it's important is because, as I said, memories for night. And so if you do not collect the unused memory, um, in your application, you have a hole. You could have a whole bunch of issues right from performance issues to memory leaks, and I probably will talk a little bit more about memory in general in another episode. But, yeah, so you could have loads of, you know, different kinds of issues and you're out. But the ones that you would more likely see are things that memory leaks. Where memory is, as the name suggests, is just leaking of the application for no good reason and usually because you haven't collected the unused memory properly, on. There are lots of different ways to implement garbage collection, and it's the good thing about languages like Caribbean Java is that you don't really have to think about it too much. So you couldn't go like a really long time in your career without having to think about garbage collection and how to implement it and things like this on DH. That's perfectly fine. But their wall come a day where you have to reckon with how your application is using memory on what's happening with the garbage collection side of things on. I think that's something memory in general is, as I said earlier, something that comes up being on the technical support side of things you see, you know, people's tickets, people's issues, people's problems. And that's something that comes up quite a bit. Memory and post press or data? Should we just say I'm so I would say that this is something when you have time. If you don't have to like, think about this right now, I think it's just something that you should like having your mind that this is how this thing works, right? So just understanding hammer move flows through an application. That is something you should know, right, but garbage collection in particular. There's multiple waste. Implement garbage collection. Most put different types of algorithms you have. I think Mark and Sweep is the most popular one, but there are like reference things. One could like reference point or something like that, where it basically gives a reference to the allocating memory and then, you know, goes back contact with any. So there's loads of different algorithms to implement garbage collection, and you can look more into detail about that in your own time. But something I did want to point out is that although this sounds fantastic and sounds amazing 1000 downsides. Garbage collection is resource intensive, right? And so when it was first implemented, what was happening was like this. Stop the world kind of garbage collection method, which meant that in order to collect the unused memory, the application will pause for a minute, Not literally a minute, but pause for a time so that it could like find or the Mermaid that's not being used collected on. Then dispose of it and then, you know, start like play now on a local machine that might be like when you're, you know, coding and it'll happen your local machine. That might be okay, that that millisecond off a pause might be fine. But when you get to production level, that millisecond could actually be like a real big problem. And it could stop other things from happening. If you've got jobs or cues or wherever it could stop things from happening there, it could take application down. It could start requesting coming in like so much could happen just because you've paused for a millisecond on DH So that SN she becomes a performance issue, it becomes a problem. And so there are now other ways, like a garbage connect or that garbage collection is implemented in. And I think one of the more one of the better ways that kind of mitigates that stopped the war problem. Off posing is like running things concurrently, so you have your application running on one record them threads, so you have an application. Wonder No. One thread. And then you have the garbage collection like Running com Company and another thread so kind of like in parallel to each other. I guess so. It doesn't have to stop your app that's have to pause. Anything right? Can just kind of look through the app on a separate thread and see what's happening. See what where the memory is being allocated and then it can dispose of it will do what it needs to do. Garbage collection and memory generals A big topic like there's a lot to understand within it on. I don't think like that. Average Web development needs to understand every little, intricate thing detail about it. But you need Teo. I think Nova need dependent on your job, depending on what you do. But you should know enough that you can talk about it, basically should know enough they can communicate about. I think that's a really good thing to do on, I think in general. So this is like we're still in the source. But this is just a bit of advice in general, when you're thinking about like learning things, No one enough to talk about. It is a great method to go by until you actually need to implement the thing. Know where to look is a really good skill. Tohave, knowing you know how to phrase questions and stuff like that is a really good school tohave cause you're expected to hold everything in your head. We just need to know enough if that makes sense. But yeah, memory, garbage, Connexion. It's not, you know, as impossible to understand and know as it may sometimes seem. Atal is no, but it is something that you should consider thinking about on DH. That is the end of today's episode of Lost in the Source. Thanks for sticking it out with me. It has been a good episode. It's been a good three weeks off. I'm happy to be back on. I'll be back next week, see then.)
